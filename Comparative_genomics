###系统发育分析
#准备好各物种的参考基因组和注释文件
#通过脚本获取最长转录本的注释文件和id
perl gff_ensembl_longest.pl YellowCatfish.gff YellowCatfish_longest.mRNA_id YellowCatfish_longest.gff3
#通过gffread获得pep和cds序列
gffread YellowCatfish_longest.gff3 -g YellowCatfish.fna -x YellowCatfish.wk.cds.fa -y YellowCatfish.wk.pep.fa
#使用orthofinder进行系统发育分析，将所有蛋白文件集中在同一目录下
module load OrthoFinder/2.3.8
module load mafft/7.453
module load FastTree/2.1.11
module load diamond/0.9.27
orthofinder -S diamond -M msa -T fasttree -t 18 -f ./
#使用trimal对物种树比对文件进行过滤
trimal -in SpeciesTreeAlignment.fa -out SpeciesTreeAlignment_trim.fa -fasta -gt 0.6 -cons 60
#使用raxml进行系统发育树构建
raxmlHPC-PTHREADS -T 4 -m PROTGAMMAJTT -f a -p 123 -x 123 -# 100 -n out -s  SpeciesTreeAlignment_trim.fa
#统计同源基因家族
dos2unix Results_Nov02/Orthogroups/Orthogroups.GeneCount.tsv
awk '{ if(NR==1){ for(i=2;i<NF;i++ ){printf $i"\t"} }else{for(i=2;i<NF;i++){ if($i>0){printf $1 } ; printf "\t" }};  printf "\n"}' Orthogroups.GeneCount.tsv |sed 's/\t$//' > Orthogroups.GeneCount.venn
#绘制韦恩图
getwd()
setwd("/Users/zhouquan/Desktop/01.tree&&venn")
library(VennDiagram)
all <- read.table("./Orthogroups.GeneCount.venn", header = TRUE, sep = '\t', stringsAsFactors = FALSE, check.names = FALSE)
head(all)
venn_list <- list(D.rerio = all$Drer, 
                  I.punctatus = all$Ipun,
                  P.vachelli= all$Pful,
                  P.fulvidraco = all$Pvac,
                  S.meridionalis = all$Smer)
venn.diagram(venn_list, filename = 'venn5.png', imagetype = 'png', 
             height = 3000,width = 3000,
             fill = c('red', 'blue', 'green', 'orange','yellow'), alpha = 0.50, 
             cat.col = c('black', 'black', 'black', 'black','black'), cat.cex = 0.6, cat.fontfamily = 'serif',cat.dist = 0.21,
             col = c('black', 'black', 'black', 'black','black'), cex = 0.75, fontfamily = 'serif')

###分化时间估算
#使用PAML的mcmctree工具，准备好phylip格式的序列文件和带有化石时间标定的树文件
cat *cds.fa > all.cds.fa
cat *pep.fa > all.pep.fa
cp   Orthogroups/Orthogroups.tsv ./
cp   Orthogroups/Orthogroups_SingleCopyOrthologues.txt ./
dos2unix Orthogroups.tsv
#提取单拷贝同源基因家族
awk '{if(NR==FNR){A[$1]=1}else{ if($1 in A || FNR==1){print $0}} }' Orthogroups_SingleCopyOrthologues.txt Orthogroups.tsv>single_copy.txt
awk '{if(NR==1){ n=split($0,A, "\t")} else { for(i=2; i<= n; i++){printf A[i]"_"$i"\t" }; printf "\n" } }' single_copy.txt|sed 's/\s\+$//' > single_copy.txt.change
#生成cds水平多序列比对结果
echo "6" > proc.txt
ParaAT.pl  -h single_copy.txt.change  -a all.pep.fa  -n all.cds.fa  -o Para_out  -p proc.txt
seqkit concat Para_out/*.cds_aln.fasta.change > single_copy.cds_msa.fasta
#fa转phylip格式
trimal -in single_copy.cds_msa.fasta -out single_copy.cds_msa.phy -phylip_paml
#提取4d位点
perl extract_4d_phy.pl single_copy.cds_msa.phy

#树文件
orthofinder生成的物种树，在timetree网站查询化石时间
#准备好mcmctree.ctl
mcmctree mcmctree.ctl
###收缩扩张分析
cp ../FigTre .
cp Orthogroups/Orthogroups.GeneCount.tsv ./
sed 's/[a-zA-Z0-9]\+$//' Orthogroups.GeneCount.tsv |awk '{print $1"\t"$0}' > input.tab
cafe5 --infile input.tab --tree input.tree --output_prefix cafe_ortho --cores 26
###正选择压力分析
cp Orthogroups/Orthogroups_SingleCopyOrthologues.txt .
cp  Orthogroups/Orthogroups.tsv .
awk '{if(NR==FNR){A[$1]=1}else{ if($1 in A || FNR==1){print $0}} }' Orthogroups_SingleCopyOrthologues.txt Orthogroups.tsv>single_copy_homo.txt

ls Results_Oct27/Single_Copy_Orthologue_Sequences/*fa|while read id ; do mv ${id} ${id%fa}aln.pep.fa;done
ls *aln.pep.fa|while read id ; do less ${id}|grep ">"|sed 's/>//g' > ${id%aln.pep.fa}mRNA.list;done
ls *mRNA.list|while read id ;do seqtk subseq All_cds.fa ${id} > ${id%mRNA.list}cds.fa;done
ls *aln.pep.fa|while read id;do ParaAT.pl  -h single_copy_homo.txt -a ${id} -n ${id%aln.pep.fa}cds.fa -p proc.txt -m clustalw2  -f paml -g  -o ${id%pep.fa}para_out ;done
准备好树文件：
5       1
(Omyk,(Ipun,(Pful#1,Pvac)),Drer);
python3 callCodeml.py ./PAML  paml.tree
注：callCodeml.py为网上查找脚本，需自己按照需求进行修改生成统一化的表格，网址为https://www.jianshu.com/p/361275ed33da